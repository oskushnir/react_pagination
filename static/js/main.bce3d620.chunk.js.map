{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","pages","Math","ceil","isHandlePrevClick","isHandleNextClick","pageNumbers","Array","from","length","_","index","_jsxs","className","children","_jsx","cn","disabled","href","onClick","handlePrevClick","map","pageNumber","active","concat","handleNextClick","items","to","numbers","n","push","getNumbers","App","setPerPage","useState","setCurrentPage","totalItems","lastItemIndex","firstItemIndex","visibleItems","slice","id","onChange","event","selectedValue","Number","target","value","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"uLAUO,MAAMA,EAAwCC,IAK9C,IAL+C,MACpDC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAoC,IAAhBL,EACpBM,EAAoBN,IAAgBE,EAEpCK,EAAcC,MAAMC,KAAK,CAAEC,OAAQR,IAAS,CAACS,EAAGC,IAAUA,EAAQ,IAcxE,OACEC,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUb,IAAqBU,SAC9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAed,EACfe,QAdgBC,KACjBhB,GACHJ,EAAaD,EAAc,IAYEe,SAC1B,WAKFR,EAAYe,KAAIC,GACfP,cAAA,MAEEF,UAAWG,IAAG,YAAa,CAAEO,OAAQD,IAAevB,IAAee,SAEnEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAM,OAAMF,GACVH,QAASA,IAAMnB,EAAasB,GAAYR,SAEvCQ,KATEA,KAcTP,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUZ,IAAqBS,SAC9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeb,EACfc,QAhDgBM,KACjBpB,GACHL,EAAaD,EAAc,IA8CEe,SAC1B,eClET,MAAMY,ECLC,SAAoBlB,EAAcmB,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIrB,EAAMqB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IAAIV,KAAIQ,GAAC,QAAAL,OAAYK,KAEpCG,EAAgBA,KAC3B,MAAOlC,EAASmC,GAAcC,mBAAiB,IACxCnC,EAAaoC,GAAkBD,mBAAiB,GACjDE,EAAaV,EAAMjB,OACnB4B,EAAgBvC,EAAUC,EAC1BuC,EAAiBD,EAAgBvC,EAAU,EAC3CyC,EAAeb,EAAMc,MAAMF,EAAiB,EAAGD,GAarD,OACEzB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAU,OACvBzB,EAAW,YAAAyB,OAAWc,EAAc,OAAAd,OAAMa,EAAgBD,EAAaA,EAAaC,EAAa,QAAAb,OAAOY,EAAU,OAG7HxB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACR6B,GAAG,kBACH5B,UAAU,eACV6B,SArBaC,IACrB,MAAMC,EAAgBC,OAAOF,EAAMG,OAAOC,OAE1Cd,EAAWW,GACXT,EAAe,IAkBPY,MAAOjD,EAAQgB,SAAA,CAEfC,cAAA,UAAQgC,MAAM,IAAGjC,SAAC,MAClBC,cAAA,UAAQgC,MAAM,IAAGjC,SAAC,MAClBC,cAAA,UAAQgC,MAAM,KAAIjC,SAAC,OACnBC,cAAA,UAAQgC,MAAM,KAAIjC,SAAC,YAIvBC,cAAA,SAAOiC,QAAQ,kBAAkBnC,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACpB,EAAU,CACTE,MAAOuC,EACPtC,QAASA,EACTC,YAAaA,EACbC,aA5CeiD,IACnBd,EAAec,MA8CblC,cAAA,MAAAD,SACGyB,EAAalB,KAAI6B,GAChBnC,cAAA,MAAI,UAAQ,OAAMD,SACfoC,GADqBA,WE7DlCC,IAASC,OAAOrC,cAACiB,EAAG,IAAKqB,SAASC,eAAe,U","file":"static/js/main.bce3d620.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype PaginationProps = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages: number = Math.ceil(total / perPage);\n  const isHandlePrevClick = currentPage === 1;\n  const isHandleNextClick = currentPage === pages;\n\n  const pageNumbers = Array.from({ length: pages }, (_, index) => index + 1);\n\n  const handleNextClick = () => {\n    if (!isHandleNextClick) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (!isHandlePrevClick) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: isHandlePrevClick })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isHandlePrevClick}\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map(pageNumber => (\n        <li\n          key={pageNumber}\n          className={cn('page-item', { active: pageNumber === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: isHandleNextClick })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isHandleNextClick}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState<number>(5);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const totalItems = items.length;\n  const lastItemIndex = perPage * currentPage;\n  const firstItemIndex = lastItemIndex - perPage + 1;\n  const visibleItems = items.slice(firstItemIndex - 1, lastItemIndex);\n\n  const itemsOnPage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    const selectedValue = Number(event.target.value);\n\n    setPerPage(selectedValue);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex} - ${lastItemIndex > totalItems ? totalItems : lastItemIndex} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPage}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={itemsOnPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}